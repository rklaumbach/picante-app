=== File: /home/rob/Documents/picante/project.txt ===


=== File: /home/rob/Documents/picante/backend/tsconfig.json ===
{
    "compilerOptions": {
      "target": "ES2020",
      "module": "CommonJS",
      "lib": ["ES2020"],
      "outDir": "dist",
      "rootDir": "src",
      "strict": true,
      "esModuleInterop": true,
      "skipLibCheck": true,
      "moduleResolution": "node",
      "resolveJsonModule": true,
      "sourceMap": true
    },
    "include": ["src/**/*"],
    "exclude": ["node_modules", "dist"]
  }
  

=== File: /home/rob/Documents/picante/backend/.env ===
PORT=5000
MONGODB_URI=mongodb+srv://rklaumbach:ARJ1NcLeHV2ulHSn@picante-app.dcxsy.mongodb.net/?retryWrites=true&w=majority&appName=picante-app
JWT_SECRET=your_jwt_secret
COMFYUI_API_BASE_URL=https://api.comfy.icu
COMFYUI_API_KEY=your_comfyui_api_key
STRIPE_SECRET_KEY=your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret
STRIPE_PRICE_ID=your_stripe_price_id


=== File: /home/rob/Documents/picante/backend/package.json ===
{
  "name": "picante-backend",
  "version": "1.0.0",
  "description": "Backend for Picante App",
  "main": "dist/app.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/app.js",
    "test": "jest --coverage"
  },
  "dependencies": {
    "axios": "^0.27.2",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "dotenv": "^16.0.1",
    "express": "^4.18.1",
    "jsonwebtoken": "^8.5.1",
    "mongodb": "^6.9.0",
    "mongoose": "^6.3.2",
    "stripe": "^8.201.0"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.2",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.0.1",
    "@types/jsonwebtoken": "^8.5.8",
    "@types/mongoose": "^5.11.97",
    "@types/node": "^16.11.7",
    "@types/stripe": "^8.0.0",
    "@types/supertest": "^2.0.11",
    "jest": "^28.1.0",
    "supertest": "^6.2.3",
    "ts-jest": "^28.0.0",
    "typescript": "^4.9.5"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}


=== File: /home/rob/Documents/picante/backend/jest.config.js ===
module.exports = {
    preset: 'ts-jest',
    testEnvironment: 'node',
  };

=== File: /home/rob/Documents/picante/backend/tests/subscriptionController.test.js ===
// backend/tests/subscriptionController.test.js

const request = require('supertest');
const app = require('../src/app');
const mongoose = require('mongoose');
const User = require('../src/models/User');

describe('Subscription Controller', () => {
  let token;
  let userId;

  beforeAll(async () => {
    await mongoose.connect(process.env.MONGODB_URI_TEST);

    const user = new User({ email: 'subscriber@example.com', password: 'hashedpassword' });
    await user.save();

    userId = user._id;
    token = 'your_test_jwt_token';
  });

  afterAll(async () => {
    await User.deleteMany({});
    await mongoose.disconnect();
  });

  test('Create subscription successfully', async () => {
    // Mock Stripe API
    jest.mock('stripe', () => {
      return jest.fn().mockImplementation(() => ({
        customers: {
          create: jest.fn().mockResolvedValue({ id: 'cus_test' }),
        },
        subscriptions: {
          create: jest.fn().mockResolvedValue({ id: 'sub_test' }),
        },
      }));
    });

    const response = await request(app)
      .post('/api/subscription/create-subscription')
      .set('Authorization', `Bearer ${token}`)
      .send({ paymentMethodId: 'pm_test' });

    expect(response.statusCode).toBe(200);
    expect(response.body).toHaveProperty('message', 'Subscription created successfully');
  });
});


=== File: /home/rob/Documents/picante/backend/tests/imageController.test.js ===
// backend/tests/imageController.test.js

const request = require('supertest');
const app = require('../src/app');
const mongoose = require('mongoose');
const User = require('../src/models/User');

describe('Image Controller', () => {
  let token;
  let userId;

  beforeAll(async () => {
    // Connect to test database and create a test user
    await mongoose.connect(process.env.MONGODB_URI_TEST);

    const user = new User({ email: 'testuser@example.com', password: 'hashedpassword', credits: 5 });
    await user.save();

    userId = user._id;
    token = 'your_test_jwt_token'; // Generate a test token
  });

  afterAll(async () => {
    await User.deleteMany({});
    await mongoose.disconnect();
  });

  test('Generate image with sufficient credits', async () => {
    // Mock comfyuiService
    jest.mock('../src/services/comfyuiService', () => ({
      generateImage: jest.fn().mockResolvedValue({ imageUrl: 'http://example.com/image.jpg' }),
    }));

    const response = await request(app)
      .post('/api/images/generate')
      .set('Authorization', `Bearer ${token}`)
      .send({ bodyPrompt: 'Test body', facePrompt: 'Test face' });

    expect(response.statusCode).toBe(200);
    expect(response.body).toHaveProperty('imageUrl');
  });
});


=== File: /home/rob/Documents/picante/backend/tests/authController.test.js ===
const request = require('supertest');
const app = require('../src/app');
const mongoose = require('mongoose');
const User = require('../src/models/User');

describe('Authentication', () => {
  beforeAll(async () => {
    await mongoose.connect(process.env.MONGODB_URI_TEST);
  });

  afterAll(async () => {
    await User.deleteMany({});
    await mongoose.disconnect();
  });

  test('Register a new user', async () => {
    const response = await request(app)
      .post('/api/auth/register')
      .send({ email: 'testuser@example.com', password: 'password123' });

    expect(response.statusCode).toBe(201);
    expect(response.body).toHaveProperty('message', 'User registered successfully');
  });

  test('Login with registered user', async () => {
    const response = await request(app)
      .post('/api/auth/login')
      .send({ email: 'testuser@example.com', password: 'password123' });

    expect(response.statusCode).toBe(200);
    expect(response.body).toHaveProperty('token');
  });
});


=== File: /home/rob/Documents/picante/backend/src/app.ts ===
import dotenv from 'dotenv';
dotenv.config();

import express, { Request, Response, NextFunction } from 'express';
import cors from 'cors';
import connectDB from './database/connection';
import authRoutes from './routes/authRoutes';
import imageRoutes from './routes/imageRoutes';
import subscriptionRoutes from './routes/subscriptionRoutes';
import userRoutes from './routes/userRoutes';
import webhookRoutes from './routes/webhookRoutes';

const app = express();

// Connect to MongoDB
connectDB();

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Routes
app.use('/api/auth', authRoutes);
app.use('/api/images', imageRoutes);
app.use('/api/subscription', subscriptionRoutes);
app.use('/api/user', userRoutes);
app.use('/webhook', webhookRoutes);

// Error handling middleware
app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
  console.error(err.stack);
  res.status(500).send('Something broke!');
});

// Start the server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

export default app;


=== File: /home/rob/Documents/picante/backend/src/models/Image.ts ===
import mongoose, { Document, Schema } from 'mongoose';

export interface IImage extends Document {
  userId: mongoose.Types.ObjectId;
  imageUrl: string;
  bodyPrompt?: string;
  facePrompt?: string;
  timestamp: Date;
  resolution?: string;
}

const imageSchema = new Schema<IImage>({
  userId: { type: Schema.Types.ObjectId, ref: 'User', required: true },
  imageUrl: { type: String, required: true },
  bodyPrompt: { type: String },
  facePrompt: { type: String },
  timestamp: { type: Date, default: Date.now },
  resolution: { type: String },
});

const Image = mongoose.model<IImage>('Image', imageSchema);

export default Image;


=== File: /home/rob/Documents/picante/backend/src/models/User.ts ===
import mongoose, { Document, Schema } from 'mongoose';

export interface IUser extends Document {
  email: string;
  password: string;
  credits: number;
  subscriptionStatus: string;
  stripeCustomerId?: string;
  createdAt: Date;
}

const userSchema = new Schema<IUser>({
  email: { type: String, required: true, unique: true },
  password: { type: String, required: true },
  credits: { type: Number, default: 5 },
  subscriptionStatus: { type: String, default: 'free' },
  stripeCustomerId: { type: String },
  createdAt: { type: Date, default: Date.now },
});

const User = mongoose.model<IUser>('User', userSchema);

export default User;


=== File: /home/rob/Documents/picante/backend/src/services/comfyuiService.ts ===
import axios from 'axios';

const COMFYUI_API_BASE_URL = process.env.COMFYUI_API_BASE_URL!;
const COMFYUI_API_KEY = process.env.COMFYUI_API_KEY!;

interface GenerateImageResult {
  imageUrl: string;
  resolution?: string;
}

interface Prompts {
  bodyPrompt?: string;
  facePrompt?: string;
}

const generateImage = async (prompts: Prompts): Promise<GenerateImageResult> => {
  try {
    const response = await axios.post(
      `${COMFYUI_API_BASE_URL}/generate`,
      prompts,
      {
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${COMFYUI_API_KEY}`,
        },
      }
    );

    // Assuming the API returns an object with an imageUrl property
    return response.data;
  } catch (error: any) {
    console.error('ComfyUI API error:', error.response ? error.response.data : error.message);
    throw new Error('ComfyUI API error');
  }
};

export default { generateImage };


=== File: /home/rob/Documents/picante/backend/src/services/billingService.js ===
// backend/src/services/billingService.js

const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);

// This service can include additional billing-related functions.
// For example, handling invoice payments, refunds, etc.

module.exports = {
  // Define functions as needed.
};


=== File: /home/rob/Documents/picante/backend/src/middleware/auth.ts ===
import { Request, Response, NextFunction } from 'express';
import jwt from 'jsonwebtoken';

export interface AuthenticatedRequest extends Request {
  user?: any;
}

const auth = (req: AuthenticatedRequest, res: Response, next: NextFunction) => {
  const authHeader = req.header('Authorization');

  if (!authHeader) return res.status(401).json({ error: 'Access denied. No token provided.' });

  const token = authHeader.replace('Bearer ', '');

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET!);
    req.user = decoded;
    next();
  } catch (ex) {
    res.status(400).json({ error: 'Invalid token.' });
  }
};

export default auth;


=== File: /home/rob/Documents/picante/backend/src/routes/subscriptionRoutes.ts ===
import express from 'express';
import auth from '../middleware/auth';
import { createSubscription } from '../controllers/subscriptionController';

const router = express.Router();

router.post('/create-subscription', auth, createSubscription);

export default router;


=== File: /home/rob/Documents/picante/backend/src/routes/imageRoutes.ts ===
import express from 'express';
import { generateImage, deleteImage, getUserImages } from '../controllers/imageController';
import auth from '../middleware/auth';

const router = express.Router();

router.post('/generate', auth, generateImage);
router.delete('/:id', auth, deleteImage);
router.get('/user', auth, getUserImages);

export default router;


=== File: /home/rob/Documents/picante/backend/src/routes/userRoutes.ts ===
// backend/src/routes/userRoutes.ts

import express from 'express';
import auth from '../middleware/auth';
import { getUserProfile, unsubscribe } from '../controllers/userController';

const router = express.Router();

router.get('/profile', auth, getUserProfile);
router.post('/unsubscribe', auth, unsubscribe);

export default router;


=== File: /home/rob/Documents/picante/backend/src/routes/webhookRoutes.ts ===
import express from 'express';
import Stripe from 'stripe';
import User from '../models/User';

const router = express.Router();
const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, { apiVersion: '2020-08-27' });

router.post('/stripe', express.raw({ type: 'application/json' }), async (req, res) => {
  const sig = req.headers['stripe-signature'] as string;
  const endpointSecret = process.env.STRIPE_WEBHOOK_SECRET!;

  let event;

  try {
    event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);
  } catch (err: any) {
    console.error('Webhook signature verification failed:', err.message);
    return res.status(400).send(`Webhook Error: ${err.message}`);
  }

  const dataObject = event.data.object;

  // Handle the event
  switch (event.type) {
    case 'customer.subscription.updated':
    case 'customer.subscription.deleted':
      const customerId = (dataObject as any).customer;
      const subscriptionStatus = (dataObject as any).status;
      // Update user's subscription status in the database
      await User.findOneAndUpdate(
        { stripeCustomerId: customerId },
        { subscriptionStatus }
      );
      break;
    // ... handle other event types
    default:
      console.log(`Unhandled event type ${event.type}`);
  }

  res.json({ received: true });
});

export default router;


=== File: /home/rob/Documents/picante/backend/src/routes/authRoutes.ts ===
import express from 'express';
import { register, login } from '../controllers/authController';

const router = express.Router();

router.post('/register', register);
router.post('/login', login);

export default router;


=== File: /home/rob/Documents/picante/backend/src/controllers/imageController.ts ===
import { Response } from 'express';
import comfyuiService from '../services/comfyuiService';
import Image from '../models/Image';
import User from '../models/User';
import { AuthenticatedRequest } from '../middleware/auth';

export const generateImage = async (req: AuthenticatedRequest, res: Response) => {
  const { bodyPrompt, facePrompt } = req.body;
  const userId = req.user.userId;

  try {
    const user = await User.findById(userId);

    // Check if user has enough credits or is a subscriber
    if (user?.subscriptionStatus !== 'active' && user?.credits! <= 0) {
      return res.status(403).json({ error: 'Out of credits' });
    }

    // Call the service to interact with ComfyUI API
    const imageResult = await comfyuiService.generateImage({ bodyPrompt, facePrompt });

    // Save image details to the database
    const newImage = new Image({
      userId,
      imageUrl: imageResult.imageUrl,
      bodyPrompt,
      facePrompt,
      resolution: imageResult.resolution,
    });

    await newImage.save();

    // Decrement user's credits if not a subscriber
    if (user?.subscriptionStatus !== 'active') {
      user!.credits -= 1;
      await user!.save();
    }

    // Respond with the image URL
    res.status(200).json({ imageUrl: imageResult.imageUrl });
  } catch (error) {
    console.error('Error generating image:', error);
    res.status(500).json({ error: 'Failed to generate image' });
  }
};

export const deleteImage = async (req: AuthenticatedRequest, res: Response) => {
  const imageId = req.params.id;
  const userId = req.user.userId;

  try {
    const image = await Image.findOne({ _id: imageId, userId });

    if (!image) {
      return res.status(404).json({ error: 'Image not found' });
    }

    await Image.deleteOne({ _id: imageId });

    res.status(200).json({ message: 'Image deleted successfully' });
  } catch (error) {
    console.error('Error deleting image:', error);
    res.status(500).json({ error: 'Failed to delete image' });
  }
};

export const getUserImages = async (req: AuthenticatedRequest, res: Response) => {
  const userId = req.user.userId;

  try {
    const images = await Image.find({ userId }).sort({ timestamp: -1 });
    res.status(200).json({ images });
  } catch (error) {
    console.error('Error fetching images:', error);
    res.status(500).json({ error: 'Failed to fetch images' });
  }
};


=== File: /home/rob/Documents/picante/backend/src/controllers/subscriptionController.ts ===
import { Response } from 'express';
import Stripe from 'stripe';
import User from '../models/User';
import { AuthenticatedRequest } from '../middleware/auth';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, { apiVersion: '2020-08-27' });

export const createSubscription = async (req: AuthenticatedRequest, res: Response) => {
  const { paymentMethodId } = req.body;
  const userId = req.user.userId;

  try {
    const user = await User.findById(userId);

    // Create or retrieve Stripe customer
    let customer;
    if (!user?.stripeCustomerId) {
      customer = await stripe.customers.create({
        email: user?.email,
        payment_method: paymentMethodId,
        invoice_settings: {
          default_payment_method: paymentMethodId,
        },
      });
      user!.stripeCustomerId = customer.id;
      await user!.save();
    } else {
      customer = await stripe.customers.retrieve(user.stripeCustomerId);
    }

    // Create subscription
    const subscription = await stripe.subscriptions.create({
      customer: customer.id,
      items: [{ price: process.env.STRIPE_PRICE_ID! }],
      expand: ['latest_invoice.payment_intent'],
    });

    // Update user's subscription status
    user!.subscriptionStatus = 'active';
    await user!.save();

    res.status(200).json({ message: 'Subscription created successfully' });
  } catch (error) {
    console.error('Subscription error:', error);
    res.status(500).json({ error: 'Subscription creation failed' });
  }
};


=== File: /home/rob/Documents/picante/backend/src/controllers/userController.ts ===
// backend/src/controllers/userController.ts

import { Response } from 'express';
import User from '../models/User';
import Stripe from 'stripe';
import { AuthenticatedRequest } from '../middleware/auth';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, { apiVersion: '2020-08-27' });

export const getUserProfile = async (req: AuthenticatedRequest, res: Response) => {
  const userId = req.user.userId;

  try {
    const user = await User.findById(userId, 'email subscriptionStatus');
    if (!user) {
      return res.status(404).json({ error: 'User not found' });
    }
    res.json({ email: user.email, subscriptionStatus: user.subscriptionStatus });
  } catch (error) {
    console.error('Error fetching user profile:', error);
    res.status(500).json({ error: 'Failed to fetch user profile' });
  }
};

export const unsubscribe = async (req: AuthenticatedRequest, res: Response) => {
  const userId = req.user.userId;
  const { reasons, additionalFeedback } = req.body;

  try {
    const user = await User.findById(userId);
    if (!user || !user.stripeCustomerId) {
      return res.status(404).json({ error: 'User not found or not subscribed' });
    }

    // Retrieve the active subscription
    const subscriptions = await stripe.subscriptions.list({
      customer: user.stripeCustomerId,
      status: 'active',
      limit: 1,
    });

    if (subscriptions.data.length === 0) {
      return res.status(400).json({ error: 'No active subscriptions found' });
    }

    const subscriptionId = subscriptions.data[0].id;

    // Cancel the subscription
    await stripe.subscriptions.del(subscriptionId);

    // Update user's subscription status
    user.subscriptionStatus = 'cancelled';
    await user.save();

    // Optionally, handle the feedback
    // For example, save to the database or send an email

    res.json({ message: 'Subscription cancelled successfully' });
  } catch (error) {
    console.error('Error cancelling subscription:', error);
    res.status(500).json({ error: 'Failed to cancel subscription' });
  }
};


=== File: /home/rob/Documents/picante/backend/src/controllers/authController.ts ===
import { Request, Response } from 'express';
import bcrypt from 'bcryptjs';
import jwt from 'jsonwebtoken';
import User, { IUser } from '../models/User';

export const register = async (req: Request, res: Response) => {
  const { email, password } = req.body;

  try {
    const existingUser = await User.findOne({ email });
    if (existingUser) return res.status(400).json({ error: 'Email already in use' });

    const hashedPassword = await bcrypt.hash(password, 10);

    const user = new User({ email, password: hashedPassword });
    await user.save();

    res.status(201).json({ message: 'User registered successfully' });
  } catch (error) {
    console.error('Registration error:', error);
    res.status(500).json({ error: 'Server error' });
  }
};

export const login = async (req: Request, res: Response) => {
  const { email, password } = req.body;

  try {
    const user = (await User.findOne({ email })) as IUser;
    if (!user) return res.status(400).json({ error: 'Invalid credentials' });

    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) return res.status(400).json({ error: 'Invalid credentials' });

    const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET!, { expiresIn: '1h' });

    res.json({ token });
  } catch (error) {
    console.error('Login error:', error);
    res.status(500).json({ error: 'Server error' });
  }
};


=== File: /home/rob/Documents/picante/backend/src/database/connection.ts ===
import mongoose from 'mongoose';

const connectDB = async (): Promise<void> => {
  try {
    await mongoose.connect(process.env.MONGODB_URI!);
    console.log('MongoDB connected');
  } catch (error) {
    console.error('MongoDB connection error:', error);
    process.exit(1);
  }
};

export default connectDB;


=== File: /home/rob/Documents/picante/backend/dist/app.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = __importDefault(require("dotenv"));
dotenv_1.default.config();
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const connection_1 = __importDefault(require("./database/connection"));
const authRoutes_1 = __importDefault(require("./routes/authRoutes"));
const imageRoutes_1 = __importDefault(require("./routes/imageRoutes"));
const subscriptionRoutes_1 = __importDefault(require("./routes/subscriptionRoutes"));
const userRoutes_1 = __importDefault(require("./routes/userRoutes"));
const webhookRoutes_1 = __importDefault(require("./routes/webhookRoutes"));
const app = (0, express_1.default)();
// Connect to MongoDB
(0, connection_1.default)();
// Middleware
app.use((0, cors_1.default)());
app.use(express_1.default.json());
app.use(express_1.default.urlencoded({ extended: true }));
// Routes
app.use('/api/auth', authRoutes_1.default);
app.use('/api/images', imageRoutes_1.default);
app.use('/api/subscription', subscriptionRoutes_1.default);
app.use('/api/user', userRoutes_1.default);
app.use('/webhook', webhookRoutes_1.default);
// Error handling middleware
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).send('Something broke!');
});
// Start the server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
exports.default = app;
//# sourceMappingURL=app.js.map

=== File: /home/rob/Documents/picante/backend/dist/app.js.map ===
{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;;;;AAAA,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,sDAAmE;AACnE,gDAAwB;AACxB,uEAA8C;AAC9C,qEAA6C;AAC7C,uEAA+C;AAC/C,qFAA6D;AAC7D,qEAA6C;AAC7C,2EAAmD;AAEnD,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AAEtB,qBAAqB;AACrB,IAAA,oBAAS,GAAE,CAAC;AAEZ,aAAa;AACb,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEhD,SAAS;AACT,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,oBAAU,CAAC,CAAC;AACjC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,qBAAW,CAAC,CAAC;AACpC,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,4BAAkB,CAAC,CAAC;AACjD,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,oBAAU,CAAC,CAAC;AACjC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,uBAAa,CAAC,CAAC;AAEnC,4BAA4B;AAC5B,GAAG,CAAC,GAAG,CAAC,CAAC,GAAU,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACtE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC;AAEH,mBAAmB;AACnB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACpB,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,EAAE,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC;AAEH,kBAAe,GAAG,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/models/Image.js.map ===
{"version":3,"file":"Image.js","sourceRoot":"","sources":["../../src/models/Image.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAsD;AAWtD,MAAM,WAAW,GAAG,IAAI,iBAAM,CAAS;IACrC,MAAM,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACpE,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC5B,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC5B,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE;IAC5C,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;CAC7B,CAAC,CAAC;AAEH,MAAM,KAAK,GAAG,kBAAQ,CAAC,KAAK,CAAS,OAAO,EAAE,WAAW,CAAC,CAAC;AAE3D,kBAAe,KAAK,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/models/User.js.map ===
{"version":3,"file":"User.js","sourceRoot":"","sources":["../../src/models/User.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAsD;AAWtD,MAAM,UAAU,GAAG,IAAI,iBAAM,CAAQ;IACnC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACrD,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE;IACrC,kBAAkB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;IACrD,gBAAgB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAClC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE;CAC7C,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,kBAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU,CAAC,CAAC;AAEvD,kBAAe,IAAI,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/models/Image.js ===
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose_1 = __importStar(require("mongoose"));
const imageSchema = new mongoose_1.Schema({
    userId: { type: mongoose_1.Schema.Types.ObjectId, ref: 'User', required: true },
    imageUrl: { type: String, required: true },
    bodyPrompt: { type: String },
    facePrompt: { type: String },
    timestamp: { type: Date, default: Date.now },
    resolution: { type: String },
});
const Image = mongoose_1.default.model('Image', imageSchema);
exports.default = Image;
//# sourceMappingURL=Image.js.map

=== File: /home/rob/Documents/picante/backend/dist/models/User.js ===
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose_1 = __importStar(require("mongoose"));
const userSchema = new mongoose_1.Schema({
    email: { type: String, required: true, unique: true },
    password: { type: String, required: true },
    credits: { type: Number, default: 5 },
    subscriptionStatus: { type: String, default: 'free' },
    stripeCustomerId: { type: String },
    createdAt: { type: Date, default: Date.now },
});
const User = mongoose_1.default.model('User', userSchema);
exports.default = User;
//# sourceMappingURL=User.js.map

=== File: /home/rob/Documents/picante/backend/dist/services/comfyuiService.js.map ===
{"version":3,"file":"comfyuiService.js","sourceRoot":"","sources":["../../src/services/comfyuiService.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAE1B,MAAM,oBAAoB,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAqB,CAAC;AAC/D,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,eAAgB,CAAC;AAYrD,MAAM,aAAa,GAAG,KAAK,EAAE,OAAgB,EAAgC,EAAE;IAC7E,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,IAAI,CAC/B,GAAG,oBAAoB,WAAW,EAClC,OAAO,EACP;YACE,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,UAAU,eAAe,EAAE;aAC7C;SACF,CACF,CAAC;QAEF,+DAA+D;QAC/D,OAAO,QAAQ,CAAC,IAAI,CAAC;KACtB;IAAC,OAAO,KAAU,EAAE;QACnB,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1F,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;KACtC;AACH,CAAC,CAAC;AAEF,kBAAe,EAAE,aAAa,EAAE,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/services/comfyuiService.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const COMFYUI_API_BASE_URL = process.env.COMFYUI_API_BASE_URL;
const COMFYUI_API_KEY = process.env.COMFYUI_API_KEY;
const generateImage = async (prompts) => {
    try {
        const response = await axios_1.default.post(`${COMFYUI_API_BASE_URL}/generate`, prompts, {
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${COMFYUI_API_KEY}`,
            },
        });
        // Assuming the API returns an object with an imageUrl property
        return response.data;
    }
    catch (error) {
        console.error('ComfyUI API error:', error.response ? error.response.data : error.message);
        throw new Error('ComfyUI API error');
    }
};
exports.default = { generateImage };
//# sourceMappingURL=comfyuiService.js.map

=== File: /home/rob/Documents/picante/backend/dist/middleware/auth.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const auth = (req, res, next) => {
    const authHeader = req.header('Authorization');
    if (!authHeader)
        return res.status(401).json({ error: 'Access denied. No token provided.' });
    const token = authHeader.replace('Bearer ', '');
    try {
        const decoded = jsonwebtoken_1.default.verify(token, process.env.JWT_SECRET);
        req.user = decoded;
        next();
    }
    catch (ex) {
        res.status(400).json({ error: 'Invalid token.' });
    }
};
exports.default = auth;
//# sourceMappingURL=auth.js.map

=== File: /home/rob/Documents/picante/backend/dist/middleware/auth.js.map ===
{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../src/middleware/auth.ts"],"names":[],"mappings":";;;;;AACA,gEAA+B;AAM/B,MAAM,IAAI,GAAG,CAAC,GAAyB,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC5E,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAE/C,IAAI,CAAC,UAAU;QAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mCAAmC,EAAE,CAAC,CAAC;IAE7F,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAEhD,IAAI;QACF,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAW,CAAC,CAAC;QAC3D,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC;QACnB,IAAI,EAAE,CAAC;KACR;IAAC,OAAO,EAAE,EAAE;QACX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;KACnD;AACH,CAAC,CAAC;AAEF,kBAAe,IAAI,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/routes/userRoutes.js.map ===
{"version":3,"file":"userRoutes.js","sourceRoot":"","sources":["../../src/routes/userRoutes.ts"],"names":[],"mappings":";AAAA,mCAAmC;;;;;AAEnC,sDAA8B;AAC9B,8DAAsC;AACtC,kEAA4E;AAE5E,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,cAAI,EAAE,+BAAc,CAAC,CAAC;AAC7C,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,cAAI,EAAE,4BAAW,CAAC,CAAC;AAE/C,kBAAe,MAAM,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/routes/subscriptionRoutes.js.map ===
{"version":3,"file":"subscriptionRoutes.js","sourceRoot":"","sources":["../../src/routes/subscriptionRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,8DAAsC;AACtC,kFAA2E;AAE3E,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,cAAI,EAAE,2CAAkB,CAAC,CAAC;AAE9D,kBAAe,MAAM,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/routes/webhookRoutes.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const stripe_1 = __importDefault(require("stripe"));
const User_1 = __importDefault(require("../models/User"));
const router = express_1.default.Router();
const stripe = new stripe_1.default(process.env.STRIPE_SECRET_KEY, { apiVersion: '2020-08-27' });
router.post('/stripe', express_1.default.raw({ type: 'application/json' }), async (req, res) => {
    const sig = req.headers['stripe-signature'];
    const endpointSecret = process.env.STRIPE_WEBHOOK_SECRET;
    let event;
    try {
        event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret);
    }
    catch (err) {
        console.error('Webhook signature verification failed:', err.message);
        return res.status(400).send(`Webhook Error: ${err.message}`);
    }
    const dataObject = event.data.object;
    // Handle the event
    switch (event.type) {
        case 'customer.subscription.updated':
        case 'customer.subscription.deleted':
            const customerId = dataObject.customer;
            const subscriptionStatus = dataObject.status;
            // Update user's subscription status in the database
            await User_1.default.findOneAndUpdate({ stripeCustomerId: customerId }, { subscriptionStatus });
            break;
        // ... handle other event types
        default:
            console.log(`Unhandled event type ${event.type}`);
    }
    res.json({ received: true });
});
exports.default = router;
//# sourceMappingURL=webhookRoutes.js.map

=== File: /home/rob/Documents/picante/backend/dist/routes/webhookRoutes.js.map ===
{"version":3,"file":"webhookRoutes.js","sourceRoot":"","sources":["../../src/routes/webhookRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,oDAA4B;AAC5B,0DAAkC;AAElC,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAkB,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC,CAAC;AAExF,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAO,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACnF,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAW,CAAC;IACtD,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAsB,CAAC;IAE1D,IAAI,KAAK,CAAC;IAEV,IAAI;QACF,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;KACvE;IAAC,OAAO,GAAQ,EAAE;QACjB,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QACrE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;KAC9D;IAED,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;IAErC,mBAAmB;IACnB,QAAQ,KAAK,CAAC,IAAI,EAAE;QAClB,KAAK,+BAA+B,CAAC;QACrC,KAAK,+BAA+B;YAClC,MAAM,UAAU,GAAI,UAAkB,CAAC,QAAQ,CAAC;YAChD,MAAM,kBAAkB,GAAI,UAAkB,CAAC,MAAM,CAAC;YACtD,oDAAoD;YACpD,MAAM,cAAI,CAAC,gBAAgB,CACzB,EAAE,gBAAgB,EAAE,UAAU,EAAE,EAChC,EAAE,kBAAkB,EAAE,CACvB,CAAC;YACF,MAAM;QACR,+BAA+B;QAC/B;YACE,OAAO,CAAC,GAAG,CAAC,wBAAwB,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;KACrD;IAED,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/routes/imageRoutes.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const imageController_1 = require("../controllers/imageController");
const auth_1 = __importDefault(require("../middleware/auth"));
const router = express_1.default.Router();
router.post('/generate', auth_1.default, imageController_1.generateImage);
router.delete('/:id', auth_1.default, imageController_1.deleteImage);
router.get('/user', auth_1.default, imageController_1.getUserImages);
exports.default = router;
//# sourceMappingURL=imageRoutes.js.map

=== File: /home/rob/Documents/picante/backend/dist/routes/authRoutes.js.map ===
{"version":3,"file":"authRoutes.js","sourceRoot":"","sources":["../../src/routes/authRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,kEAAgE;AAEhE,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,yBAAQ,CAAC,CAAC;AACnC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,sBAAK,CAAC,CAAC;AAE7B,kBAAe,MAAM,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/routes/subscriptionRoutes.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_1 = __importDefault(require("../middleware/auth"));
const subscriptionController_1 = require("../controllers/subscriptionController");
const router = express_1.default.Router();
router.post('/create-subscription', auth_1.default, subscriptionController_1.createSubscription);
exports.default = router;
//# sourceMappingURL=subscriptionRoutes.js.map

=== File: /home/rob/Documents/picante/backend/dist/routes/authRoutes.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const authController_1 = require("../controllers/authController");
const router = express_1.default.Router();
router.post('/register', authController_1.register);
router.post('/login', authController_1.login);
exports.default = router;
//# sourceMappingURL=authRoutes.js.map

=== File: /home/rob/Documents/picante/backend/dist/routes/userRoutes.js ===
"use strict";
// backend/src/routes/userRoutes.ts
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_1 = __importDefault(require("../middleware/auth"));
const userController_1 = require("../controllers/userController");
const router = express_1.default.Router();
router.get('/profile', auth_1.default, userController_1.getUserProfile);
router.post('/unsubscribe', auth_1.default, userController_1.unsubscribe);
exports.default = router;
//# sourceMappingURL=userRoutes.js.map

=== File: /home/rob/Documents/picante/backend/dist/routes/imageRoutes.js.map ===
{"version":3,"file":"imageRoutes.js","sourceRoot":"","sources":["../../src/routes/imageRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,oEAA2F;AAC3F,8DAAsC;AAEtC,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,cAAI,EAAE,+BAAa,CAAC,CAAC;AAC9C,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,cAAI,EAAE,6BAAW,CAAC,CAAC;AACzC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,cAAI,EAAE,+BAAa,CAAC,CAAC;AAEzC,kBAAe,MAAM,CAAC"}

=== File: /home/rob/Documents/picante/backend/dist/controllers/authController.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.login = exports.register = void 0;
const bcryptjs_1 = __importDefault(require("bcryptjs"));
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const User_1 = __importDefault(require("../models/User"));
const register = async (req, res) => {
    const { email, password } = req.body;
    try {
        const existingUser = await User_1.default.findOne({ email });
        if (existingUser)
            return res.status(400).json({ error: 'Email already in use' });
        const hashedPassword = await bcryptjs_1.default.hash(password, 10);
        const user = new User_1.default({ email, password: hashedPassword });
        await user.save();
        res.status(201).json({ message: 'User registered successfully' });
    }
    catch (error) {
        console.error('Registration error:', error);
        res.status(500).json({ error: 'Server error' });
    }
};
exports.register = register;
const login = async (req, res) => {
    const { email, password } = req.body;
    try {
        const user = (await User_1.default.findOne({ email }));
        if (!user)
            return res.status(400).json({ error: 'Invalid credentials' });
        const isMatch = await bcryptjs_1.default.compare(password, user.password);
        if (!isMatch)
            return res.status(400).json({ error: 'Invalid credentials' });
        const token = jsonwebtoken_1.default.sign({ userId: user._id }, process.env.JWT_SECRET, { expiresIn: '1h' });
        res.json({ token });
    }
    catch (error) {
        console.error('Login error:', error);
        res.status(500).json({ error: 'Server error' });
    }
};
exports.login = login;
//# sourceMappingURL=authController.js.map

=== File: /home/rob/Documents/picante/backend/dist/controllers/imageController.js.map ===
{"version":3,"file":"imageController.js","sourceRoot":"","sources":["../../src/controllers/imageController.ts"],"names":[],"mappings":"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"}

=== File: /home/rob/Documents/picante/backend/dist/controllers/userController.js.map ===
{"version":3,"file":"userController.js","sourceRoot":"","sources":["../../src/controllers/userController.ts"],"names":[],"mappings":";AAAA,4CAA4C;;;;;;AAG5C,0DAAkC;AAClC,oDAA4B;AAG5B,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAkB,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC,CAAC;AAEjF,MAAM,cAAc,GAAG,KAAK,EAAE,GAAyB,EAAE,GAAa,EAAE,EAAE;IAC/E,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAE/B,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,0BAA0B,CAAC,CAAC;QACrE,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;SAC1D;QACD,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;KAC9E;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACrD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,8BAA8B,EAAE,CAAC,CAAC;KACjE;AACH,CAAC,CAAC;AAbW,QAAA,cAAc,kBAazB;AAEK,MAAM,WAAW,GAAG,KAAK,EAAE,GAAyB,EAAE,GAAa,EAAE,EAAE;IAC5E,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/B,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAEjD,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACnC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kCAAkC,EAAE,CAAC,CAAC;SAC5E;QAED,mCAAmC;QACnC,MAAM,aAAa,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;YACpD,QAAQ,EAAE,IAAI,CAAC,gBAAgB;YAC/B,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,CAAC;SACT,CAAC,CAAC;QAEH,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,+BAA+B,EAAE,CAAC,CAAC;SACzE;QAED,MAAM,cAAc,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAEhD,0BAA0B;QAC1B,MAAM,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE/C,oCAAoC;QACpC,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC;QACtC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QAElB,kCAAkC;QAClC,qDAAqD;QAErD,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qCAAqC,EAAE,CAAC,CAAC;KAC9D;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,+BAA+B,EAAE,CAAC,CAAC;KAClE;AACH,CAAC,CAAC;AAtCW,QAAA,WAAW,eAsCtB"}

=== File: /home/rob/Documents/picante/backend/dist/controllers/authController.js.map ===
{"version":3,"file":"authController.js","sourceRoot":"","sources":["../../src/controllers/authController.ts"],"names":[],"mappings":";;;;;;AACA,wDAA8B;AAC9B,gEAA+B;AAC/B,0DAA6C;AAEtC,MAAM,QAAQ,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAC5D,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAErC,IAAI;QACF,MAAM,YAAY,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,YAAY;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;QAEjF,MAAM,cAAc,GAAG,MAAM,kBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAEvD,MAAM,IAAI,GAAG,IAAI,cAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,EAAE,CAAC,CAAC;QAC3D,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QAElB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,CAAC;KACnE;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAC5C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;KACjD;AACH,CAAC,CAAC;AAjBW,QAAA,QAAQ,YAiBnB;AAEK,MAAM,KAAK,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IACzD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAErC,IAAI;QACF,MAAM,IAAI,GAAG,CAAC,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAU,CAAC;QACtD,IAAI,CAAC,IAAI;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC,CAAC;QAEzE,MAAM,OAAO,GAAG,MAAM,kBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC,CAAC;QAE5E,MAAM,KAAK,GAAG,sBAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,UAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QAE3F,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;KACrB;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACrC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;KACjD;AACH,CAAC,CAAC;AAjBW,QAAA,KAAK,SAiBhB"}

=== File: /home/rob/Documents/picante/backend/dist/controllers/subscriptionController.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSubscription = void 0;
const stripe_1 = __importDefault(require("stripe"));
const User_1 = __importDefault(require("../models/User"));
const stripe = new stripe_1.default(process.env.STRIPE_SECRET_KEY, { apiVersion: '2020-08-27' });
const createSubscription = async (req, res) => {
    const { paymentMethodId } = req.body;
    const userId = req.user.userId;
    try {
        const user = await User_1.default.findById(userId);
        // Create or retrieve Stripe customer
        let customer;
        if (!user?.stripeCustomerId) {
            customer = await stripe.customers.create({
                email: user?.email,
                payment_method: paymentMethodId,
                invoice_settings: {
                    default_payment_method: paymentMethodId,
                },
            });
            user.stripeCustomerId = customer.id;
            await user.save();
        }
        else {
            customer = await stripe.customers.retrieve(user.stripeCustomerId);
        }
        // Create subscription
        const subscription = await stripe.subscriptions.create({
            customer: customer.id,
            items: [{ price: process.env.STRIPE_PRICE_ID }],
            expand: ['latest_invoice.payment_intent'],
        });
        // Update user's subscription status
        user.subscriptionStatus = 'active';
        await user.save();
        res.status(200).json({ message: 'Subscription created successfully' });
    }
    catch (error) {
        console.error('Subscription error:', error);
        res.status(500).json({ error: 'Subscription creation failed' });
    }
};
exports.createSubscription = createSubscription;
//# sourceMappingURL=subscriptionController.js.map

=== File: /home/rob/Documents/picante/backend/dist/controllers/subscriptionController.js.map ===
{"version":3,"file":"subscriptionController.js","sourceRoot":"","sources":["../../src/controllers/subscriptionController.ts"],"names":[],"mappings":";;;;;;AACA,oDAA4B;AAC5B,0DAAkC;AAGlC,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAkB,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC,CAAC;AAEjF,MAAM,kBAAkB,GAAG,KAAK,EAAE,GAAyB,EAAE,GAAa,EAAE,EAAE;IACnF,MAAM,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IACrC,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAE/B,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEzC,qCAAqC;QACrC,IAAI,QAAQ,CAAC;QACb,IAAI,CAAC,IAAI,EAAE,gBAAgB,EAAE;YAC3B,QAAQ,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;gBACvC,KAAK,EAAE,IAAI,EAAE,KAAK;gBAClB,cAAc,EAAE,eAAe;gBAC/B,gBAAgB,EAAE;oBAChB,sBAAsB,EAAE,eAAe;iBACxC;aACF,CAAC,CAAC;YACH,IAAK,CAAC,gBAAgB,GAAG,QAAQ,CAAC,EAAE,CAAC;YACrC,MAAM,IAAK,CAAC,IAAI,EAAE,CAAC;SACpB;aAAM;YACL,QAAQ,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACnE;QAED,sBAAsB;QACtB,MAAM,YAAY,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC;YACrD,QAAQ,EAAE,QAAQ,CAAC,EAAE;YACrB,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,eAAgB,EAAE,CAAC;YAChD,MAAM,EAAE,CAAC,+BAA+B,CAAC;SAC1C,CAAC,CAAC;QAEH,oCAAoC;QACpC,IAAK,CAAC,kBAAkB,GAAG,QAAQ,CAAC;QACpC,MAAM,IAAK,CAAC,IAAI,EAAE,CAAC;QAEnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;KACxE;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAC5C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,8BAA8B,EAAE,CAAC,CAAC;KACjE;AACH,CAAC,CAAC;AAvCW,QAAA,kBAAkB,sBAuC7B"}

=== File: /home/rob/Documents/picante/backend/dist/controllers/imageController.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUserImages = exports.deleteImage = exports.generateImage = void 0;
const comfyuiService_1 = __importDefault(require("../services/comfyuiService"));
const Image_1 = __importDefault(require("../models/Image"));
const User_1 = __importDefault(require("../models/User"));
const generateImage = async (req, res) => {
    const { bodyPrompt, facePrompt } = req.body;
    const userId = req.user.userId;
    try {
        const user = await User_1.default.findById(userId);
        // Check if user has enough credits or is a subscriber
        if (user?.subscriptionStatus !== 'active' && user?.credits <= 0) {
            return res.status(403).json({ error: 'Out of credits' });
        }
        // Call the service to interact with ComfyUI API
        const imageResult = await comfyuiService_1.default.generateImage({ bodyPrompt, facePrompt });
        // Save image details to the database
        const newImage = new Image_1.default({
            userId,
            imageUrl: imageResult.imageUrl,
            bodyPrompt,
            facePrompt,
            resolution: imageResult.resolution,
        });
        await newImage.save();
        // Decrement user's credits if not a subscriber
        if (user?.subscriptionStatus !== 'active') {
            user.credits -= 1;
            await user.save();
        }
        // Respond with the image URL
        res.status(200).json({ imageUrl: imageResult.imageUrl });
    }
    catch (error) {
        console.error('Error generating image:', error);
        res.status(500).json({ error: 'Failed to generate image' });
    }
};
exports.generateImage = generateImage;
const deleteImage = async (req, res) => {
    const imageId = req.params.id;
    const userId = req.user.userId;
    try {
        const image = await Image_1.default.findOne({ _id: imageId, userId });
        if (!image) {
            return res.status(404).json({ error: 'Image not found' });
        }
        await Image_1.default.deleteOne({ _id: imageId });
        res.status(200).json({ message: 'Image deleted successfully' });
    }
    catch (error) {
        console.error('Error deleting image:', error);
        res.status(500).json({ error: 'Failed to delete image' });
    }
};
exports.deleteImage = deleteImage;
const getUserImages = async (req, res) => {
    const userId = req.user.userId;
    try {
        const images = await Image_1.default.find({ userId }).sort({ timestamp: -1 });
        res.status(200).json({ images });
    }
    catch (error) {
        console.error('Error fetching images:', error);
        res.status(500).json({ error: 'Failed to fetch images' });
    }
};
exports.getUserImages = getUserImages;
//# sourceMappingURL=imageController.js.map

=== File: /home/rob/Documents/picante/backend/dist/controllers/userController.js ===
"use strict";
// backend/src/controllers/userController.ts
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.unsubscribe = exports.getUserProfile = void 0;
const User_1 = __importDefault(require("../models/User"));
const stripe_1 = __importDefault(require("stripe"));
const stripe = new stripe_1.default(process.env.STRIPE_SECRET_KEY, { apiVersion: '2020-08-27' });
const getUserProfile = async (req, res) => {
    const userId = req.user.userId;
    try {
        const user = await User_1.default.findById(userId, 'email subscriptionStatus');
        if (!user) {
            return res.status(404).json({ error: 'User not found' });
        }
        res.json({ email: user.email, subscriptionStatus: user.subscriptionStatus });
    }
    catch (error) {
        console.error('Error fetching user profile:', error);
        res.status(500).json({ error: 'Failed to fetch user profile' });
    }
};
exports.getUserProfile = getUserProfile;
const unsubscribe = async (req, res) => {
    const userId = req.user.userId;
    const { reasons, additionalFeedback } = req.body;
    try {
        const user = await User_1.default.findById(userId);
        if (!user || !user.stripeCustomerId) {
            return res.status(404).json({ error: 'User not found or not subscribed' });
        }
        // Retrieve the active subscription
        const subscriptions = await stripe.subscriptions.list({
            customer: user.stripeCustomerId,
            status: 'active',
            limit: 1,
        });
        if (subscriptions.data.length === 0) {
            return res.status(400).json({ error: 'No active subscriptions found' });
        }
        const subscriptionId = subscriptions.data[0].id;
        // Cancel the subscription
        await stripe.subscriptions.del(subscriptionId);
        // Update user's subscription status
        user.subscriptionStatus = 'cancelled';
        await user.save();
        // Optionally, handle the feedback
        // For example, save to the database or send an email
        res.json({ message: 'Subscription cancelled successfully' });
    }
    catch (error) {
        console.error('Error cancelling subscription:', error);
        res.status(500).json({ error: 'Failed to cancel subscription' });
    }
};
exports.unsubscribe = unsubscribe;
//# sourceMappingURL=userController.js.map

=== File: /home/rob/Documents/picante/backend/dist/database/connection.js ===
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose_1 = __importDefault(require("mongoose"));
const connectDB = async () => {
    try {
        await mongoose_1.default.connect(process.env.MONGODB_URI);
        console.log('MongoDB connected');
    }
    catch (error) {
        console.error('MongoDB connection error:', error);
        process.exit(1);
    }
};
exports.default = connectDB;
//# sourceMappingURL=connection.js.map

=== File: /home/rob/Documents/picante/backend/dist/database/connection.js.map ===
{"version":3,"file":"connection.js","sourceRoot":"","sources":["../../src/database/connection.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,SAAS,GAAG,KAAK,IAAmB,EAAE;IAC1C,IAAI;QACF,MAAM,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,WAAY,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;KAClC;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;QAClD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;AACH,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC"}

