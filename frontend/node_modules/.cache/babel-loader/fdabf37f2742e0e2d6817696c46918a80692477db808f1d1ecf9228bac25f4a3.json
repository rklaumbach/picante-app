{"ast":null,"code":"var _jsxFileName = \"/home/rob/Documents/picante/frontend/src/pages/GalleryPage.tsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/GalleryPage.tsx\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Header from '../components/Header';\nimport DeleteConfirmationDialog from '../components/DeleteConfirmationDialog';\nimport BottomNav from '../components/BottomNav';\nimport ImageModal from '../components/ImageModal';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Mock data with nine images\nconst mockImages = [\n  // ... (same mock images as provided earlier)\n];\nconst GalleryPage = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [selectedImageDetails, setSelectedImageDetails] = useState(null);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [imageToDelete, setImageToDelete] = useState(null);\n  const navigate = useNavigate();\n\n  // Define the BACKEND_AVAILABLE flag\n  const BACKEND_AVAILABLE = false; // Set to true when backend is ready\n\n  useEffect(() => {\n    // Function to fetch images from the backend\n    const fetchImages = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.warn('No token found, redirecting to login.');\n          navigate('/login');\n          return;\n        }\n        const response = await fetch('/api/images/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Fetched images:', data.images); // Debugging\n          if (Array.isArray(data.images)) {\n            setImages(data.images);\n          } else {\n            console.error('Invalid data format for images:', data.images);\n            // Fallback to mock data if the format is incorrect\n            setImages(mockImages);\n          }\n        } else {\n          console.error('Failed to fetch images:', response.status, response.statusText);\n          // Fallback to mock data on failure\n          setImages(mockImages);\n        }\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        // Fallback to mock data on error\n        setImages(mockImages);\n      }\n    };\n\n    // Toggle between real fetch and mock data based on backend availability\n    if (BACKEND_AVAILABLE) {\n      fetchImages();\n    } else {\n      // Use mock data when backend is not available\n      setImages(mockImages);\n    }\n  }, [navigate, BACKEND_AVAILABLE]);\n  const handleImageClick = image => {\n    setSelectedImageDetails(image);\n  };\n  const handleDeleteClick = imageId => {\n    setImageToDelete(imageId);\n    setIsDeleteDialogOpen(true);\n  };\n  const handleConfirmDelete = useCallback(async () => {\n    if (!imageToDelete) return;\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.warn('No token found, redirecting to login.');\n        navigate('/login');\n        return;\n      }\n      const response = await fetch(`/api/images/${imageToDelete}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setImages(images.filter(img => img._id !== imageToDelete));\n        setIsDeleteDialogOpen(false);\n        setImageToDelete(null);\n        alert('Image deleted successfully!');\n      } else {\n        const data = await response.json();\n        alert(`Failed to delete image: ${data.error || response.statusText}`);\n      }\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      alert('An error occurred while deleting the image.');\n    }\n  }, [imageToDelete, images, navigate]);\n  const handleMockDelete = useCallback(() => {\n    if (!imageToDelete) return;\n    setImages(images.filter(img => img._id !== imageToDelete));\n    setIsDeleteDialogOpen(false);\n    setImageToDelete(null);\n    alert('Image deleted successfully (mock)!');\n  }, [imageToDelete, images]);\n\n  // Function to handle image download\n  const handleDownload = useCallback(image => {\n    const link = document.createElement('a');\n    link.href = image.imageUrl;\n    link.download = image.filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, []);\n\n  // Function to handle full view\n  const handleFullView = useCallback(image => {\n    // Open the full view in a new tab and pass the image data via sessionStorage\n    sessionStorage.setItem('fullViewImage', JSON.stringify(image));\n    window.open('/full-view', '_blank');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex flex-col items-center px-4 pb-16 mx-auto w-full max-w-7xl min-h-screen pt-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-container flex flex-col items-center w-full\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mt-6 text-white\",\n          children: \"Your Images:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mt-4 max-h-[70vh] overflow-y-auto overflow-x-hidden px-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\",\n            children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative group cursor-pointer overflow-hidden\",\n              onClick: () => handleImageClick(image),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: image.imageUrl,\n                alt: image.filename,\n                loading: \"lazy\",\n                className: \"w-full h-auto rounded-lg object-cover transform transition-transform duration-200 hover:scale-105\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"absolute top-2 right-2 bg-red-600 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\",\n                onClick: e => {\n                  e.stopPropagation(); // Prevent triggering the image click\n                  handleDeleteClick(image._id);\n                },\n                \"aria-label\": \"Delete Image\",\n                children: \"\\u2716\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, image._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), selectedImageDetails && /*#__PURE__*/_jsxDEV(ImageModal, {\n          image: selectedImageDetails,\n          onClose: () => setSelectedImageDetails(null),\n          onDownload: handleDownload,\n          onDelete: handleDeleteClick,\n          onFullView: handleFullView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmationDialog, {\n          isOpen: isDeleteDialogOpen,\n          onClose: () => setIsDeleteDialogOpen(false),\n          onConfirm: BACKEND_AVAILABLE ? handleConfirmDelete : handleMockDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GalleryPage, \"SEM0S5XgILDwSrS8IVhFjJwK8Qg=\", false, function () {\n  return [useNavigate];\n});\n_c = GalleryPage;\nexport default GalleryPage;\nvar _c;\n$RefreshReg$(_c, \"GalleryPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Header","DeleteConfirmationDialog","BottomNav","ImageModal","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","mockImages","GalleryPage","_s","images","setImages","selectedImageDetails","setSelectedImageDetails","isDeleteDialogOpen","setIsDeleteDialogOpen","imageToDelete","setImageToDelete","navigate","BACKEND_AVAILABLE","fetchImages","token","localStorage","getItem","console","warn","response","fetch","headers","Authorization","ok","data","json","log","Array","isArray","error","status","statusText","handleImageClick","image","handleDeleteClick","imageId","handleConfirmDelete","method","filter","img","_id","alert","handleMockDelete","handleDownload","link","document","createElement","href","imageUrl","download","filename","body","appendChild","click","removeChild","handleFullView","sessionStorage","setItem","JSON","stringify","window","open","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","alt","loading","e","stopPropagation","onClose","onDownload","onDelete","onFullView","isOpen","onConfirm","_c","$RefreshReg$"],"sources":["/home/rob/Documents/picante/frontend/src/pages/GalleryPage.tsx"],"sourcesContent":["// frontend/src/pages/GalleryPage.tsx\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Header from '../components/Header';\nimport DeleteConfirmationDialog from '../components/DeleteConfirmationDialog';\nimport BottomNav from '../components/BottomNav';\nimport ImageModal from '../components/ImageModal';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Image {\n  _id: string;\n  imageUrl: string;\n  filename: string;\n  bodyPrompt: string;\n  facePrompt: string;\n  resolution: string;\n  timestamp: string;\n}\n\n// Mock data with nine images\nconst mockImages: Image[] = [\n  // ... (same mock images as provided earlier)\n];\n\nconst GalleryPage: React.FC = () => {\n  const [images, setImages] = useState<Image[]>([]);\n  const [selectedImageDetails, setSelectedImageDetails] = useState<Image | null>(null);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [imageToDelete, setImageToDelete] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  // Define the BACKEND_AVAILABLE flag\n  const BACKEND_AVAILABLE = false; // Set to true when backend is ready\n\n  useEffect(() => {\n    // Function to fetch images from the backend\n    const fetchImages = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.warn('No token found, redirecting to login.');\n          navigate('/login');\n          return;\n        }\n\n        const response = await fetch('/api/images/user', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Fetched images:', data.images); // Debugging\n          if (Array.isArray(data.images)) {\n            setImages(data.images);\n          } else {\n            console.error('Invalid data format for images:', data.images);\n            // Fallback to mock data if the format is incorrect\n            setImages(mockImages);\n          }\n        } else {\n          console.error('Failed to fetch images:', response.status, response.statusText);\n          // Fallback to mock data on failure\n          setImages(mockImages);\n        }\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        // Fallback to mock data on error\n        setImages(mockImages);\n      }\n    };\n\n    // Toggle between real fetch and mock data based on backend availability\n    if (BACKEND_AVAILABLE) {\n      fetchImages();\n    } else {\n      // Use mock data when backend is not available\n      setImages(mockImages);\n    }\n  }, [navigate, BACKEND_AVAILABLE]);\n\n  const handleImageClick = (image: Image) => {\n    setSelectedImageDetails(image);\n  };\n\n  const handleDeleteClick = (imageId: string) => {\n    setImageToDelete(imageId);\n    setIsDeleteDialogOpen(true);\n  };\n\n  const handleConfirmDelete = useCallback(async () => {\n    if (!imageToDelete) return;\n\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.warn('No token found, redirecting to login.');\n        navigate('/login');\n        return;\n      }\n\n      const response = await fetch(`/api/images/${imageToDelete}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        setImages(images.filter((img) => img._id !== imageToDelete));\n        setIsDeleteDialogOpen(false);\n        setImageToDelete(null);\n        alert('Image deleted successfully!');\n      } else {\n        const data = await response.json();\n        alert(`Failed to delete image: ${data.error || response.statusText}`);\n      }\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      alert('An error occurred while deleting the image.');\n    }\n  }, [imageToDelete, images, navigate]);\n\n  const handleMockDelete = useCallback(() => {\n    if (!imageToDelete) return;\n    setImages(images.filter((img) => img._id !== imageToDelete));\n    setIsDeleteDialogOpen(false);\n    setImageToDelete(null);\n    alert('Image deleted successfully (mock)!');\n  }, [imageToDelete, images]);\n\n  // Function to handle image download\n  const handleDownload = useCallback((image: Image) => {\n    const link = document.createElement('a');\n    link.href = image.imageUrl;\n    link.download = image.filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, []);\n\n  // Function to handle full view\n  const handleFullView = useCallback((image: Image) => {\n    // Open the full view in a new tab and pass the image data via sessionStorage\n    sessionStorage.setItem('fullViewImage', JSON.stringify(image));\n    window.open('/full-view', '_blank');\n  }, []);\n\n  return (\n    <>\n      <main className=\"flex flex-col items-center px-4 pb-16 mx-auto w-full max-w-7xl min-h-screen pt-20\">\n        <div className=\"app-container flex flex-col items-center w-full\">\n          {/* Header */}\n          <Header title=\"Gallery\" />\n\n          {/* Smaller Title Above the Gallery */}\n          <h2 className=\"text-2xl font-semibold mt-6 text-white\">Your Images:</h2>\n\n          {/* Scrollable Image Gallery */}\n          <div className=\"w-full mt-4 max-h-[70vh] overflow-y-auto overflow-x-hidden px-2\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n              {images.map((image) => (\n                <div\n                  key={image._id}\n                  className=\"relative group cursor-pointer overflow-hidden\"\n                  onClick={() => handleImageClick(image)}\n                >\n                  <img\n                    src={image.imageUrl}\n                    alt={image.filename}\n                    loading=\"lazy\"\n                    className=\"w-full h-auto rounded-lg object-cover transform transition-transform duration-200 hover:scale-105\"\n                  />\n                  <button\n                    className=\"absolute top-2 right-2 bg-red-600 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\"\n                    onClick={(e) => {\n                      e.stopPropagation(); // Prevent triggering the image click\n                      handleDeleteClick(image._id);\n                    }}\n                    aria-label=\"Delete Image\"\n                  >\n                    ✖\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Image Overlay Modal */}\n          {selectedImageDetails && (\n            <ImageModal\n              image={selectedImageDetails}\n              onClose={() => setSelectedImageDetails(null)}\n              onDownload={handleDownload}\n              onDelete={handleDeleteClick}\n              onFullView={handleFullView}\n            />\n          )}\n\n          {/* Delete Confirmation Dialog */}\n          <DeleteConfirmationDialog\n            isOpen={isDeleteDialogOpen}\n            onClose={() => setIsDeleteDialogOpen(false)}\n            onConfirm={BACKEND_AVAILABLE ? handleConfirmDelete : handleMockDelete}\n          />\n        </div>\n      </main>\n      <BottomNav />\n    </>\n  );\n};\n\nexport default GalleryPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}