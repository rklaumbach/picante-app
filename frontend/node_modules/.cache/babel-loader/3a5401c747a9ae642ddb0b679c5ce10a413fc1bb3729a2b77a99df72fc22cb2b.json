{"ast":null,"code":"var _jsxFileName = \"/home/rob/Documents/picante/frontend/src/pages/GalleryPage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/GalleryPage.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport ImageDetailsDialog from '../components/ImageDetailsDialog';\nimport DeleteConfirmationDialog from '../components/DeleteConfirmationDialog';\nimport BottomNav from '../components/BottomNav';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Mock data to simulate fetched images\nconst mockImages = [{\n  _id: '1',\n  imageUrl: 'https://via.placeholder.com/300x200.png?text=Image+1',\n  bodyPrompt: 'A serene landscape with mountains.',\n  facePrompt: 'A smiling person enjoying the view.',\n  resolution: '1920x1080',\n  timestamp: '2024-04-25T10:30:00Z'\n}, {\n  _id: '2',\n  imageUrl: 'https://via.placeholder.com/300x200.png?text=Image+2',\n  bodyPrompt: 'A bustling city skyline at night.',\n  facePrompt: 'People walking under bright lights.',\n  resolution: '1920x1080',\n  timestamp: '2024-04-26T12:45:00Z'\n}\n// Add more mock images as needed\n];\nconst GalleryPage = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [selectedImageDetails, setSelectedImageDetails] = useState(null);\n  const [isDetailsDialogOpen, setIsDetailsDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [imageToDelete, setImageToDelete] = useState(null);\n  const navigate = useNavigate();\n\n  // Define the BACKEND_AVAILABLE flag\n  const BACKEND_AVAILABLE = false; // Set to true when backend is ready\n\n  useEffect(() => {\n    // Function to fetch images from the backend\n    const fetchImages = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.warn('No token found, redirecting to login.');\n          navigate('/login');\n          return;\n        }\n        const response = await fetch('/api/images/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Fetched images:', data.images); // Debugging\n          if (Array.isArray(data.images)) {\n            setImages(data.images);\n          } else {\n            console.error('Invalid data format for images:', data.images);\n            // Fallback to mock data if the format is incorrect\n            setImages(mockImages);\n          }\n        } else {\n          console.error('Failed to fetch images:', response.status, response.statusText);\n          // Fallback to mock data on failure\n          setImages(mockImages);\n        }\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        // Fallback to mock data on error\n        setImages(mockImages);\n      }\n    };\n\n    // Toggle between real fetch and mock data based on backend availability\n    if (BACKEND_AVAILABLE) {\n      fetchImages();\n    } else {\n      // Use mock data when backend is not available\n      setImages(mockImages);\n    }\n  }, [navigate, BACKEND_AVAILABLE]);\n  const handleImageClick = image => {\n    setSelectedImageDetails(image);\n    setIsDetailsDialogOpen(true);\n  };\n  const handleDeleteClick = imageId => {\n    setImageToDelete(imageId);\n    setIsDeleteDialogOpen(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!imageToDelete) return;\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.warn('No token found, redirecting to login.');\n        navigate('/login');\n        return;\n      }\n      const response = await fetch(`/api/images/${imageToDelete}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setImages(images.filter(img => img._id !== imageToDelete));\n        setIsDeleteDialogOpen(false);\n        setImageToDelete(null);\n        alert('Image deleted successfully!');\n      } else {\n        const data = await response.json();\n        alert(`Failed to delete image: ${data.error || response.statusText}`);\n      }\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      alert('An error occurred while deleting the image.');\n    }\n  };\n  const handleMockDelete = () => {\n    if (!imageToDelete) return;\n    setImages(images.filter(img => img._id !== imageToDelete));\n    setIsDeleteDialogOpen(false);\n    setImageToDelete(null);\n    alert('Image deleted successfully (mock)!');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex flex-col items-center px-7 pb-16 mx-auto w-full max-w-7xl text-white bg-red-500 min-h-screen pt-20\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"My Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), images.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-6\",\n        children: \"No images found. Start generating some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mt-6 w-full\",\n        children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative group\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.imageUrl,\n            alt: \"Generated\",\n            loading: \"lazy\",\n            className: \"w-full rounded-lg cursor-pointer transform transition-transform duration-200 hover:scale-105\",\n            onClick: () => handleImageClick(image)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"absolute top-2 right-2 bg-red-600 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\",\n            onClick: () => handleDeleteClick(image._id),\n            \"aria-label\": \"Delete Image\",\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, image._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), selectedImageDetails && /*#__PURE__*/_jsxDEV(ImageDetailsDialog, {\n        isOpen: isDetailsDialogOpen,\n        onClose: () => setIsDetailsDialogOpen(false),\n        imageDetails: {\n          timestamp: selectedImageDetails.timestamp,\n          resolution: selectedImageDetails.resolution,\n          bodyPrompt: selectedImageDetails.bodyPrompt,\n          facePrompt: selectedImageDetails.facePrompt\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmationDialog, {\n        isOpen: isDeleteDialogOpen,\n        onClose: () => setIsDeleteDialogOpen(false),\n        onConfirm: BACKEND_AVAILABLE ? handleConfirmDelete : handleMockDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GalleryPage, \"vScxU6k/GvZG43PUT5Gz+zsw9ps=\", false, function () {\n  return [useNavigate];\n});\n_c = GalleryPage;\nexport default GalleryPage;\nvar _c;\n$RefreshReg$(_c, \"GalleryPage\");","map":{"version":3,"names":["React","useState","useEffect","Header","ImageDetailsDialog","DeleteConfirmationDialog","BottomNav","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","mockImages","_id","imageUrl","bodyPrompt","facePrompt","resolution","timestamp","GalleryPage","_s","images","setImages","selectedImageDetails","setSelectedImageDetails","isDetailsDialogOpen","setIsDetailsDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","imageToDelete","setImageToDelete","navigate","BACKEND_AVAILABLE","fetchImages","token","localStorage","getItem","console","warn","response","fetch","headers","Authorization","ok","data","json","log","Array","isArray","error","status","statusText","handleImageClick","image","handleDeleteClick","imageId","handleConfirmDelete","method","filter","img","alert","handleMockDelete","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","alt","loading","onClick","isOpen","onClose","imageDetails","onConfirm","_c","$RefreshReg$"],"sources":["/home/rob/Documents/picante/frontend/src/pages/GalleryPage.tsx"],"sourcesContent":["// src/pages/GalleryPage.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport ImageDetailsDialog from '../components/ImageDetailsDialog';\nimport DeleteConfirmationDialog from '../components/DeleteConfirmationDialog';\nimport BottomNav from '../components/BottomNav';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Image {\n  _id: string;\n  imageUrl: string;\n  bodyPrompt: string;\n  facePrompt: string;\n  resolution: string;\n  timestamp: string;\n}\n\n// Mock data to simulate fetched images\nconst mockImages: Image[] = [\n  {\n    _id: '1',\n    imageUrl: 'https://via.placeholder.com/300x200.png?text=Image+1',\n    bodyPrompt: 'A serene landscape with mountains.',\n    facePrompt: 'A smiling person enjoying the view.',\n    resolution: '1920x1080',\n    timestamp: '2024-04-25T10:30:00Z',\n  },\n  {\n    _id: '2',\n    imageUrl: 'https://via.placeholder.com/300x200.png?text=Image+2',\n    bodyPrompt: 'A bustling city skyline at night.',\n    facePrompt: 'People walking under bright lights.',\n    resolution: '1920x1080',\n    timestamp: '2024-04-26T12:45:00Z',\n  },\n  // Add more mock images as needed\n];\n\nconst GalleryPage: React.FC = () => {\n  const [images, setImages] = useState<Image[]>([]);\n  const [selectedImageDetails, setSelectedImageDetails] = useState<Image | null>(null);\n  const [isDetailsDialogOpen, setIsDetailsDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [imageToDelete, setImageToDelete] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  // Define the BACKEND_AVAILABLE flag\n  const BACKEND_AVAILABLE = false; // Set to true when backend is ready\n\n  useEffect(() => {\n    // Function to fetch images from the backend\n    const fetchImages = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.warn('No token found, redirecting to login.');\n          navigate('/login');\n          return;\n        }\n\n        const response = await fetch('/api/images/user', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Fetched images:', data.images); // Debugging\n          if (Array.isArray(data.images)) {\n            setImages(data.images);\n          } else {\n            console.error('Invalid data format for images:', data.images);\n            // Fallback to mock data if the format is incorrect\n            setImages(mockImages);\n          }\n        } else {\n          console.error('Failed to fetch images:', response.status, response.statusText);\n          // Fallback to mock data on failure\n          setImages(mockImages);\n        }\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        // Fallback to mock data on error\n        setImages(mockImages);\n      }\n    };\n\n    // Toggle between real fetch and mock data based on backend availability\n    if (BACKEND_AVAILABLE) {\n      fetchImages();\n    } else {\n      // Use mock data when backend is not available\n      setImages(mockImages);\n    }\n  }, [navigate, BACKEND_AVAILABLE]);\n\n  const handleImageClick = (image: Image) => {\n    setSelectedImageDetails(image);\n    setIsDetailsDialogOpen(true);\n  };\n\n  const handleDeleteClick = (imageId: string) => {\n    setImageToDelete(imageId);\n    setIsDeleteDialogOpen(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!imageToDelete) return;\n\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.warn('No token found, redirecting to login.');\n        navigate('/login');\n        return;\n      }\n\n      const response = await fetch(`/api/images/${imageToDelete}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        setImages(images.filter((img) => img._id !== imageToDelete));\n        setIsDeleteDialogOpen(false);\n        setImageToDelete(null);\n        alert('Image deleted successfully!');\n      } else {\n        const data = await response.json();\n        alert(`Failed to delete image: ${data.error || response.statusText}`);\n      }\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      alert('An error occurred while deleting the image.');\n    }\n  };\n\n  const handleMockDelete = () => {\n    if (!imageToDelete) return;\n    setImages(images.filter((img) => img._id !== imageToDelete));\n    setIsDeleteDialogOpen(false);\n    setImageToDelete(null);\n    alert('Image deleted successfully (mock)!');\n  };\n\n  return (\n    <>\n      <main className=\"flex flex-col items-center px-7 pb-16 mx-auto w-full max-w-7xl text-white bg-red-500 min-h-screen pt-20\">\n        <Header title=\"My Gallery\" />\n        {images.length === 0 ? (\n          <p className=\"mt-6\">No images found. Start generating some!</p>\n        ) : (\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mt-6 w-full\">\n            {images.map((image) => (\n              <div key={image._id} className=\"relative group\">\n                <img\n                  src={image.imageUrl}\n                  alt=\"Generated\"\n                  loading=\"lazy\"\n                  className=\"w-full rounded-lg cursor-pointer transform transition-transform duration-200 hover:scale-105\"\n                  onClick={() => handleImageClick(image)}\n                />\n                <button\n                  className=\"absolute top-2 right-2 bg-red-600 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\"\n                  onClick={() => handleDeleteClick(image._id)}\n                  aria-label=\"Delete Image\"\n                >\n                  ✖\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {selectedImageDetails && (\n          <ImageDetailsDialog\n            isOpen={isDetailsDialogOpen}\n            onClose={() => setIsDetailsDialogOpen(false)}\n            imageDetails={{\n              timestamp: selectedImageDetails.timestamp,\n              resolution: selectedImageDetails.resolution,\n              bodyPrompt: selectedImageDetails.bodyPrompt,\n              facePrompt: selectedImageDetails.facePrompt,\n            }}\n          />\n        )}\n\n        <DeleteConfirmationDialog\n          isOpen={isDeleteDialogOpen}\n          onClose={() => setIsDeleteDialogOpen(false)}\n          onConfirm={BACKEND_AVAILABLE ? handleConfirmDelete : handleMockDelete}\n        />\n      </main>\n      <BottomNav />\n    </>\n  );\n};\n\nexport default GalleryPage;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,kBAAkB,MAAM,kCAAkC;AACjE,OAAOC,wBAAwB,MAAM,wCAAwC;AAC7E,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAW/C;AACA,MAAMC,UAAmB,GAAG,CAC1B;EACEC,GAAG,EAAE,GAAG;EACRC,QAAQ,EAAE,sDAAsD;EAChEC,UAAU,EAAE,oCAAoC;EAChDC,UAAU,EAAE,qCAAqC;EACjDC,UAAU,EAAE,WAAW;EACvBC,SAAS,EAAE;AACb,CAAC,EACD;EACEL,GAAG,EAAE,GAAG;EACRC,QAAQ,EAAE,sDAAsD;EAChEC,UAAU,EAAE,mCAAmC;EAC/CC,UAAU,EAAE,qCAAqC;EACjDC,UAAU,EAAE,WAAW;EACvBC,SAAS,EAAE;AACb;AACA;AAAA,CACD;AAED,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACsB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGvB,QAAQ,CAAe,IAAI,CAAC;EACpF,MAAM,CAACwB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC0B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAgB,IAAI,CAAC;EACvE,MAAM8B,QAAQ,GAAGxB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMyB,iBAAiB,GAAG,KAAK,CAAC,CAAC;;EAEjC9B,SAAS,CAAC,MAAM;IACd;IACA,MAAM+B,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACVG,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;UACrDP,QAAQ,CAAC,QAAQ,CAAC;UAClB;QACF;QAEA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;UAC/CC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,IAAIK,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCR,OAAO,CAACS,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAACvB,MAAM,CAAC,CAAC,CAAC;UAC7C,IAAI0B,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACvB,MAAM,CAAC,EAAE;YAC9BC,SAAS,CAACsB,IAAI,CAACvB,MAAM,CAAC;UACxB,CAAC,MAAM;YACLgB,OAAO,CAACY,KAAK,CAAC,iCAAiC,EAAEL,IAAI,CAACvB,MAAM,CAAC;YAC7D;YACAC,SAAS,CAACV,UAAU,CAAC;UACvB;QACF,CAAC,MAAM;UACLyB,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEV,QAAQ,CAACW,MAAM,EAAEX,QAAQ,CAACY,UAAU,CAAC;UAC9E;UACA7B,SAAS,CAACV,UAAU,CAAC;QACvB;MACF,CAAC,CAAC,OAAOqC,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C;QACA3B,SAAS,CAACV,UAAU,CAAC;MACvB;IACF,CAAC;;IAED;IACA,IAAIoB,iBAAiB,EAAE;MACrBC,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACL;MACAX,SAAS,CAACV,UAAU,CAAC;IACvB;EACF,CAAC,EAAE,CAACmB,QAAQ,EAAEC,iBAAiB,CAAC,CAAC;EAEjC,MAAMoB,gBAAgB,GAAIC,KAAY,IAAK;IACzC7B,uBAAuB,CAAC6B,KAAK,CAAC;IAC9B3B,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAM4B,iBAAiB,GAAIC,OAAe,IAAK;IAC7CzB,gBAAgB,CAACyB,OAAO,CAAC;IACzB3B,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAM4B,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAAC3B,aAAa,EAAE;IAEpB,IAAI;MACF,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVG,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;QACrDP,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MAEA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAeX,aAAa,EAAE,EAAE;QAC3D4B,MAAM,EAAE,QAAQ;QAChBhB,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUR,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,IAAIK,QAAQ,CAACI,EAAE,EAAE;QACfrB,SAAS,CAACD,MAAM,CAACqC,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAAC9C,GAAG,KAAKgB,aAAa,CAAC,CAAC;QAC5DD,qBAAqB,CAAC,KAAK,CAAC;QAC5BE,gBAAgB,CAAC,IAAI,CAAC;QACtB8B,KAAK,CAAC,6BAA6B,CAAC;MACtC,CAAC,MAAM;QACL,MAAMhB,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCe,KAAK,CAAC,2BAA2BhB,IAAI,CAACK,KAAK,IAAIV,QAAQ,CAACY,UAAU,EAAE,CAAC;MACvE;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CW,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAChC,aAAa,EAAE;IACpBP,SAAS,CAACD,MAAM,CAACqC,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAAC9C,GAAG,KAAKgB,aAAa,CAAC,CAAC;IAC5DD,qBAAqB,CAAC,KAAK,CAAC;IAC5BE,gBAAgB,CAAC,IAAI,CAAC;IACtB8B,KAAK,CAAC,oCAAoC,CAAC;EAC7C,CAAC;EAED,oBACEnD,OAAA,CAAAE,SAAA;IAAAmD,QAAA,gBACErD,OAAA;MAAMsD,SAAS,EAAC,yGAAyG;MAAAD,QAAA,gBACvHrD,OAAA,CAACN,MAAM;QAAC6D,KAAK,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5B/C,MAAM,CAACgD,MAAM,KAAK,CAAC,gBAClB5D,OAAA;QAAGsD,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAuC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE/D3D,OAAA;QAAKsD,SAAS,EAAC,kEAAkE;QAAAD,QAAA,EAC9EzC,MAAM,CAACiD,GAAG,CAAEjB,KAAK,iBAChB5C,OAAA;UAAqBsD,SAAS,EAAC,gBAAgB;UAAAD,QAAA,gBAC7CrD,OAAA;YACE8D,GAAG,EAAElB,KAAK,CAACvC,QAAS;YACpB0D,GAAG,EAAC,WAAW;YACfC,OAAO,EAAC,MAAM;YACdV,SAAS,EAAC,8FAA8F;YACxGW,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACC,KAAK;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACF3D,OAAA;YACEsD,SAAS,EAAC,iIAAiI;YAC3IW,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACD,KAAK,CAACxC,GAAG,CAAE;YAC5C,cAAW,cAAc;YAAAiD,QAAA,EAC1B;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAdDf,KAAK,CAACxC,GAAG;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAed,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,EAEA7C,oBAAoB,iBACnBd,OAAA,CAACL,kBAAkB;QACjBuE,MAAM,EAAElD,mBAAoB;QAC5BmD,OAAO,EAAEA,CAAA,KAAMlD,sBAAsB,CAAC,KAAK,CAAE;QAC7CmD,YAAY,EAAE;UACZ3D,SAAS,EAAEK,oBAAoB,CAACL,SAAS;UACzCD,UAAU,EAAEM,oBAAoB,CAACN,UAAU;UAC3CF,UAAU,EAAEQ,oBAAoB,CAACR,UAAU;UAC3CC,UAAU,EAAEO,oBAAoB,CAACP;QACnC;MAAE;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF,eAED3D,OAAA,CAACJ,wBAAwB;QACvBsE,MAAM,EAAEhD,kBAAmB;QAC3BiD,OAAO,EAAEA,CAAA,KAAMhD,qBAAqB,CAAC,KAAK,CAAE;QAC5CkD,SAAS,EAAE9C,iBAAiB,GAAGwB,mBAAmB,GAAGK;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACP3D,OAAA,CAACH,SAAS;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACb,CAAC;AAEP,CAAC;AAAChD,EAAA,CAjKID,WAAqB;EAAA,QAMRZ,WAAW;AAAA;AAAAwE,EAAA,GANxB5D,WAAqB;AAmK3B,eAAeA,WAAW;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}