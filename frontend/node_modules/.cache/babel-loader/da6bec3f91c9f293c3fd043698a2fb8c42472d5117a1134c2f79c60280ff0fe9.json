{"ast":null,"code":"var _jsxFileName = \"/home/rob/Documents/picante/frontend/src/pages/GenerateImagePage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/GenerateImagePage.tsx\n\nimport React, { useState } from 'react';\nimport LoginDialog from '../components/LoginDialog';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GenerateImagePage = () => {\n  _s();\n  const [isLoginDialogOpen, setIsLoginDialogOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Generate Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"pt-20 flex flex-col items-center px-4 pb-10 mx-auto w-full max-w-6xl bg-red-500 min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl sm:text-3xl md:text-4xl font-semibold mt-4\",\n          children: \"Generate Your Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Open Login\",\n        className: \"mt-6 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-200\",\n        onClick: () => setIsLoginDialogOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginDialog, {\n      isOpen: isLoginDialogOpen,\n      onClose: () => setIsLoginDialogOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GenerateImagePage, \"KzYQCA8sJI2+REU3b9bQ+fy8vhM=\");\n_c = GenerateImagePage;\nexport default GenerateImagePage;\nvar _c;\n$RefreshReg$(_c, \"GenerateImagePage\");","map":{"version":3,"names":["React","useState","LoginDialog","Header","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","GenerateImagePage","_s","isLoginDialogOpen","setIsLoginDialogOpen","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","text","onClick","isOpen","onClose","_c","$RefreshReg$"],"sources":["/home/rob/Documents/picante/frontend/src/pages/GenerateImagePage.tsx"],"sourcesContent":["// src/pages/GenerateImagePage.tsx\n\nimport React, { useState } from 'react';\nimport LoginDialog from '../components/LoginDialog';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\n\nconst GenerateImagePage: React.FC = () => {\n  const [isLoginDialogOpen, setIsLoginDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Header title=\"Generate Images\" />\n      <main className=\"pt-20 flex flex-col items-center px-4 pb-10 mx-auto w-full max-w-6xl bg-red-500 min-h-screen\">\n        {/* Your Generate Image Page Content */}\n        <div className=\"flex flex-col items-center\">\n          <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-semibold mt-4\">Generate Your Image</h2>\n          {/* Add your image generation components here */}\n        </div>\n        <Button\n          text=\"Open Login\"\n          className=\"mt-6 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-200\"\n          onClick={() => setIsLoginDialogOpen(true)}\n        />\n      </main>\n      <LoginDialog\n        isOpen={isLoginDialogOpen}\n        onClose={() => setIsLoginDialogOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default GenerateImagePage;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjE,oBACEK,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA,CAACH,MAAM;MAACW,KAAK,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCZ,OAAA;MAAMa,SAAS,EAAC,8FAA8F;MAAAN,QAAA,gBAE5GP,OAAA;QAAKa,SAAS,EAAC,4BAA4B;QAAAN,QAAA,eACzCP,OAAA;UAAIa,SAAS,EAAC,qDAAqD;UAAAN,QAAA,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzF,CAAC,eACNZ,OAAA,CAACF,MAAM;QACLgB,IAAI,EAAC,YAAY;QACjBD,SAAS,EAAC,4FAA4F;QACtGE,OAAO,EAAEA,CAAA,KAAMT,oBAAoB,CAAC,IAAI;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACPZ,OAAA,CAACJ,WAAW;MACVoB,MAAM,EAAEX,iBAAkB;MAC1BY,OAAO,EAAEA,CAAA,KAAMX,oBAAoB,CAAC,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACR,EAAA,CAxBID,iBAA2B;AAAAe,EAAA,GAA3Bf,iBAA2B;AA0BjC,eAAeA,iBAAiB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}